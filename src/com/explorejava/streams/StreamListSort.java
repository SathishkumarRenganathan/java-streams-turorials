package com.explorejava.streams;import java.util.ArrayList;import java.util.Comparator;import java.util.List;import java.util.stream.Collectors;public class StreamListSort {    public static void main(String[] args) {        List<String> fruits = new ArrayList<String>();        fruits.add("Banana");        fruits.add("Apple");        fruits.add("Strawberry");        fruits.add("Dragon Fruit");        fruits.add("Avacoda");        List<String> sortedList = fruits.stream().sorted(Comparator.naturalOrder()).collect(Collectors.toList());        System.out.println(sortedList);        System.out.println("***************");        //using lambda expression        List<String> sortedListObj2 = fruits.stream().sorted((o1 , o2) -> o1.compareTo(o2)).collect(Collectors.toList());        System.out.println(sortedListObj2);        System.out.println("***************");        //without parameter        List<String> sortedList3 = fruits.stream().sorted().collect(Collectors.toList());        System.out.println(sortedList3);        //decending order        List<String> sortedListObj = fruits.stream().sorted(Comparator.reverseOrder()).collect(Collectors.toList());        System.out.println(sortedListObj);        System.out.println("***************");        List<String> sortedListObj4 = fruits.stream().sorted((o1, o2) -> o2.compareTo(o1)).collect(Collectors.toList());        System.out.println(sortedListObj4);    }}